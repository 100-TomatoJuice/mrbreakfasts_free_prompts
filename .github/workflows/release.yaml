name: Release

on:
  workflow_dispatch:

env:
  package: mrbreakfasts_free_prompts
  add_package_to_github_release: true
  itch_target: 100tomatojuice.itch.io/test

jobs:

  release-package:
    runs-on: ubuntu-latest
    
    steps:
      - name: Package as zip
        run: |
          zip -r ../${{ env.package }}.zip ../${{ env.package }} -x "Mr. Breakfast's Free Prompts"/meta\* "Mr. Breakfast's Free Prompts"/previews\* "Mr. Breakfast's Free Prompts"/.gitattributes\* 

      - name: Upload package to artifacts
        uses: actions/upload-artifact@v3
        with:
          path: ${{ env.package }}.zip
          retention-days: 1

      - name: Upload package to release
        if: ${{ env.add_package_to_github_release == 'true' }}
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ env.package }}.zip
          asset_name: $"Mr. Breakfast's Free Prompts".zip
          tag: ${{ github.ref }}
          overwrite: true 
  
  check-if-upload-to-itch-is-configured:
    runs-on: ubuntu-latest
    outputs:
      should-upload: ${{ steps.check-env.outputs.has-itch-target }}
    steps:
      - id: check-env
        run: |
          if [[ -z "$itch_target" ]]; then
            echo "has-itch-target=no" >> $GITHUB_OUTPUT
          else
            echo "has-itch-target=yes" >> $GITHUB_OUTPUT
          fi

  upload-to-itch:
    runs-on: ubuntu-latest
    needs:
      - check-if-upload-to-itch-is-configured
      - release-package
    if: ${{ needs.check-if-upload-to-itch-is-configured.outputs.should-upload == 'yes' }}

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          path: ./builds

      - name: Install butler
        run: |
          curl -L -o butler.zip https://broth.itch.ovh/butler/linux-amd64/LATEST/archive/default
          unzip butler.zip
          chmod +x butler
          ./butler -V
      - uses: olegtarasov/get-tag@v2.1.2
        id: get_version
      - name: Upload to itch.io
        env:
          BUTLER_API_KEY: ${{ secrets.BUTLER_CREDENTIALS }}
        run: |
          for channel in $(ls builds); do
            ./butler push \
                --fix-permissions \
                --userversion="${{ steps.get_version.outputs.tag }}" \
                builds/$channel/* \
                ${{ env.itch_target }}:$channel
          done